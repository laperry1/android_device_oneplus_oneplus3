# List of effect libraries to load. Each library element must contain a "path" element
# giving the full path of the library .so file.
#    libraries {
#        <lib name> {
#          path <lib path>
#        }
#    }
libraries {
  v4a_fx {
    path /system/lib/soundfx/libv4a_fx_ics.so
  }
  bundle {
    path /system/lib/soundfx/llibv4a_fx_ics.so
  }
  reverb {
    path /system/lib/soundfx/libv4a_fx_ics.so
  }
  visualizer_hw {
    path /system/lib/soundfx/libv4a_fx_ics.so
  }
  downmix {
    path /system/lib/soundfx/libv4a_fx_ics.so
  }
  loudness_enhancer {
    path /system/lib/soundfx/libldnhncr.so
  }
  proxy {
    path /system/lib/soundfx/libeffectproxy.so
  }
  offload_bundle {
    path /system/lib/soundfx/libqcompostprocbundle.so
  }
  audio_pre_processing {
    path /system/lib/soundfx/libqcomvoiceprocessing.so
  }
  loudness_enhancer {
    path /system/lib/soundfx/libldnhncr.so
  }
  volume_listener {
    path /system/lib/soundfx/libvolumelistener.so
  }
}

# Default pre-processing library. Add to audio_effect.conf "libraries" section if
# audio HAL implements support for default software audio pre-processing effects
#
#  pre_processing {
#    path /system/lib/soundfx/libaudiopreprocessing.so
#  }

# list of effects to load. Each effect element must contain a "library" and a "uuid" element.
# The value of the "library" element must correspond to the name of one library element in the
# "libraries" element.
# The name of the effect element is indicative, only the value of the "uuid" element
# designates the effect.
# The uuid is the implementation specific UUID as specified by the effect vendor. This is not the
# generic effect type UUID.
#    effects {
#        <fx name> {
#            library <lib name>
#            uuid <effect uuid>
#        }
#        ...
#    }

effects {

# additions for the proxy implementation
# Proxy implementation
  #effectname {
    #library proxy
    #uuid  xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx

    # SW implemetation of the effect. Added as a node under the proxy to
    # indicate this as a sub effect.
      #libsw {
         #library libSW
         #uuid  yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy
      #} End of SW effect

    # HW implementation of the effect. Added as a node under the proxy to
    # indicate this as a sub effect.
      #libhw {
         #library libHW
         #uuid  zzzzzzzz-zzzz-zzzz-zzzz-zzzzzzzzzzzz
      #}End of HW effect
  #} End of effect proxy

  bassboost {
    library v4a_fx
    uuid 41d3c987-e6cf-11e3-a88a-11aba5d5c51b
  }
  virtualizer {
    library v4a_fx
    uuid 41d3c987-e6cf-11e3-a88a-11aba5d5c51b
    }

    libhw {
      library offload_bundle
      uuid 509a4498-561a-4bea-b3b1-0002a5d5c51b
    }
  }
  equalizer {
    library v4a_fx
    uuid 41d3c987-e6cf-11e3-a88a-11aba5d5c51b
  }
  volume {
    library v4a_fx
    uuid 41d3c987-e6cf-11e3-a88a-11aba5d5c51b
  }
  reverb_env_aux {
    library v4a_fx
    uuid 41d3c987-e6cf-11e3-a88a-11aba5d5c51b
  }
  reverb_env_ins {
    library v4a_fx
    uuid 41d3c987-e6cf-11e3-a88a-11aba5d5c51b
  }
  reverb_pre_aux {
    library v4a_fx
    uuid 41d3c987-e6cf-11e3-a88a-11aba5d5c51b
  }
  reverb_pre_ins {
    library v4a_fx
    uuid 41d3c987-e6cf-11e3-a88a-11aba5d5c51b
  }
  visualizer {
    library v4a_fx
    uuid 41d3c987-e6cf-11e3-a88a-11aba5d5c51b
  }
  downmix {
    library v4a_fx
    uuid 41d3c987-e6cf-11e3-a88a-11aba5d5c51b
  }
  loudness_enhancer {
    library loudness_enhancer
    uuid fa415329-2034-4bea-b5dc-5b381c8d1e2c
  }
#  aec {
#    library audio_pre_processing
#    uuid 0f8d0d2a-59e5-45fe-b6e4-248c8a799109
#  }
#  ns {
#    library audio_pre_processing
#    uuid 1d97bb0b-9e2f-4403-9ae3-58c2554306f8
#  }
}

# Default pre-processing effects. Add to audio_effect.conf "effects" section if
# audio HAL implements support for them.
#
#  agc {
#    library pre_processing
#    uuid aa8130e0-66fc-11e0-bad0-0002a5d5c51b
#  }
#  aec {
#    library pre_processing
#    uuid bb392ec0-8d4d-11e0-a896-0002a5d5c51b
#  }
#  ns {
#    library pre_processing
#    uuid c06c8400-8e06-11e0-9cb6-0002a5d5c51b
#  }

# Audio preprocessor configurations.
# The pre processor configuration consists in a list of elements each describing
# pre processor settings for a given input source. Valid input source names are:
# "mic", "camcorder", "voice_recognition", "voice_communication"
# Each input source element contains a list of effects elements. The name of the effect
# element must be the name of one of the effects in the "effects" list of the file.
# Each effect element may optionally contain a list of parameters and their
# default value to apply when the pre processor effect is created.
# A parameter is defined by a "param" element and a "value" element. Each of these elements
# consists in one or more elements specifying a type followed by a value.
# The types defined are: "int", "short", "float", "bool" and "string"
# When both "param" and "value" are a single int, a simple form is allowed where just
# the param and value pair is present in the parameter description
#    pre_processing {
#        <input source name> {
#            <fx name> {
#                <param 1 name> {
#                    param {
#                        int|short|float|bool|string <value>
#                        [ int|short|float|bool|string <value> ]
#                        ...
#                    }
#                    value {
#                        int|short|float|bool|string <value>
#                        [ int|short|float|bool|string <value> ]
#                        ...
#                    }
#                }
#                <param 2 name > {<param> <value>}
#                ...
#            }
#            ...
#        }
#        ...
#    }

pre_processing {
    voice_communication {
        aec {}
        ns {}
    }
}
